name: CI-argoCD-Pipeline
on:
  push:
    branches:
      - master
      - test
    paths:
      - 'app/*.py'
      - '.github/workflows/*'

env:
  PROJECT_ID: eks-poc-flask
  BUCKET_NAME: chartsDev
  REPO_NAME: codedemos

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", 3.10", "3.11"]
    steps:
        - name: Checkout the code
          uses: actions/checkout@v2

        - name: RUn test the code
          run: | 
            echo "RUN all the code check"
        - name: Setup Python # Set Python version
          uses: actions/setup-python@v4
          with:
            python-version: ${{ matrix.python-version }}
          # Install pip and pytest
        - name: Install dependencies
          run: |
              python -m pip install --upgrade pip
              pip install pytest
              pip install -r app/requirements.txt
        - name: Test with pytest
          run: |
              pytest -v

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}

        - name: Define TAG and HELM_PACKAGE
          run: |
            #TAG=$(bash version.sh)
            TAG="${GITHUB_REF##*/}-${{ github.sha }}"
            HELM_PACKAGE=${{ env.REPO_NAME }}-${TAG}.tgz
            echo "TAG=${TAG}" >> $GITHUB_ENV
            # echo "HELM_PACKAGE=${HELM_PACKAGE}" >> $GITHUB_ENV
            echo "$GITHUB_ENV"

        - name: Build and Push Docker Image
          uses: docker/build-push-action@v2
          with:
            context: ./app
            file: ./app/Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USERNAME }}/${{env.PROJECT_ID}}:${{ env.TAG }}, ${{ secrets.DOCKER_USERNAME }}/${{env.PROJECT_ID}}:latest
  deploy:
      name: deploy and update
      runs-on: ubuntu-latest
      needs: build-and-test

      steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Update Image Tag Values
        run: |
          branch=${GITHUB_REF##*/}
          [ $branch == 'test' ] && CHART_DIR="chartTest"
          [ $branch == 'master' ] && CHART_DIR="chartProd"
          #new_image_tag=${{ env.TAG }}
          new_image_tag="${GITHUB_REF##*/}-${{ github.sha }}"
          echo "---> $GITHUB_ENV"
          echo "---> $new_image_tag"

          # Update the values.yaml file with the new image tag
          sed -i "s/^  tag: .*/  tag: $new_image_tag/" "$CHART_DIR/values.yaml"
      
      - name: Commit the changes made
        run: | 
          git config --global user.name 'LiboMa'
          git config --global user.email 'malibo8407@gmail.com'
          git commit -am "updating image tag"
          git push
